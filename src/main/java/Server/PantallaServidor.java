/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Server;

import Modelos.Mensaje;
import Modelos.TipoMensaje;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author jos_m
 */
public class PantallaServidor extends javax.swing.JFrame {
    
    Servidor server;
    
    /**
     * Creates new form PantallaServidor
     */
    public PantallaServidor() {
        initComponents();
        server = new Servidor(this);
        
    }
    
    public void write(String texto) {
        if (txtAreaServer != null) {
            txtAreaServer.append(texto + "\n");
        } else {
            System.err.println("[ERROR] txtArea aún no está listo: " + texto);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaServer = new javax.swing.JTextArea();
        btnIniciarJuego = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        btnParar = new javax.swing.JButton();
        btnMasMapas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtAreaServer.setColumns(20);
        txtAreaServer.setRows(5);
        jScrollPane1.setViewportView(txtAreaServer);

        btnIniciarJuego.setText("Iniciar Juego");
        btnIniciarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarJuegoActionPerformed(evt);
            }
        });

        btnFinalizar.setText("Finalizar Juego");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnParar.setText("Parar Server");
        btnParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPararActionPerformed(evt);
            }
        });

        btnMasMapas.setText("Agregar Mapas");
        btnMasMapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasMapasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnIniciarJuego, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(btnParar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMasMapas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIniciarJuego)
                        .addGap(38, 38, 38)
                        .addComponent(btnFinalizar)
                        .addGap(33, 33, 33)
                        .addComponent(btnParar)
                        .addGap(38, 38, 38)
                        .addComponent(btnMasMapas))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarJuegoActionPerformed
        server.iniciarJuego();
    }//GEN-LAST:event_btnIniciarJuegoActionPerformed

    private void btnMasMapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasMapasActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar nuevo mapa (.txt)");

        int resultado = fileChooser.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();

            // Validar que sea un archivo .txt
            if (!archivoSeleccionado.getName().toLowerCase().endsWith(".txt")) {
                JOptionPane.showMessageDialog(this, "Solo se permiten archivos .txt", "Archivo inválido", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Copiar el mapa al proyecto
            try {
                server.copiarMapaAlProyecto(archivoSeleccionado);
                JOptionPane.showMessageDialog(this, "Mapa agregado correctamente.", "Mapa agregado", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al copiar el mapa: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMasMapasActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        // Reset interno del servidor
        server.getJugadores().clear();
        server.getZombies().clear();
        server.getNombresEnEspera().clear();
        server.setNivelActual(1);


        // Enviar a clientes la orden de volver al Lobby
        Mensaje volverLobby = new Mensaje("SERVIDOR", "VOLVER_LOBBY", "TODOS", TipoMensaje.VOLVER_LOBBY);
        for (ThreadServidor cliente : server.getClientesAceptados()) {
            try {
                cliente.salida.writeObject(volverLobby);
                cliente.salida.flush();
            } catch (IOException e) {
                System.err.println("Error al enviar VOLVER_LOBBY: " + e.getMessage());
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPararActionPerformed
        Mensaje cerrar = new Mensaje("SERVIDOR", "El servidor ha sido cerrado", "TODOS", TipoMensaje.FINALIZAR_JUEGO);

        for (ThreadServidor cliente : server.getClientesAceptados()) {
            try {
                cliente.salida.writeObject(cerrar);
                cliente.salida.flush();
                cliente.socket.close(); // Desconecta al cliente
            } catch (IOException e) {
                System.err.println("Error cerrando cliente: " + e.getMessage());
            }
        }

        try {
            server.getServerSocket().close(); 
            txtAreaServer.append("Servidor fuera");
        } catch (IOException e) {
            System.err.println("Error cerrando el servidor: " + e.getMessage());
        }

        
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_btnPararActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaServidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnIniciarJuego;
    private javax.swing.JButton btnMasMapas;
    private javax.swing.JButton btnParar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaServer;
    // End of variables declaration//GEN-END:variables
}
